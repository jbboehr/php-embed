name: ci

on:
    push:
        branches:
            - master
            - develop
            - ci
    pull_request:
        branches:
            - master

permissions:
    contents: read

jobs:
    test:
        runs-on: ubuntu-latest
        name: "Test | PHP ${{ matrix.php-version }}"
        strategy:
            matrix:
                php-version:
                    - "8.1"
                    - "8.2"
                    - "8.3"
                    - "8.4"
        steps:
            -   uses: actions/checkout@v4

            -   name: Install PHP
                uses: shivammathur/setup-php@v2
                with:
                    coverage: "none"
                    extensions: json, opcache
                    ini-values: extension=vyrtue.so
                    php-version: "${{ matrix.php-version }}"
                    tools: composer:v2

            -   run: |
                    VYRTUE_REV=$(jq -r '.nodes."ext-vyrtue".locked.rev' flake.lock)
                    git clone https://github.com/jbboehr/php-vyrtue.git
                    cd php-vyrtue
                    git checkout "${VYRTUE_REV}"
                    phpize
                    ./configure
                    make clean all test
                    sudo make install

            -   run: phpize

            -   run: ./configure

            -   run: make

            -   run: make test TEST_PHP_ARGS='-d extension=php-vyrtue/modules/vyrtue.so'

    coverage:
        runs-on: ubuntu-latest
        name: "Coverage | PHP ${{ matrix.php-version }}"
        strategy:
            matrix:
                php-version:
                    - "8.1"
                    - "8.2"
                    - "8.3"
                    - "8.4"
        steps:
            -   uses: actions/checkout@v4

            -   name: Install Pkgs
                uses: awalsh128/cache-apt-pkgs-action@latest
                with:
                    packages: lcov
                    version: lcov

            -   name: Install PHP
                uses: shivammathur/setup-php@v2
                with:
                    coverage: pcov
                    extensions: json, opcache
                    ini-values: extension=vyrtue.so
                    php-version: "${{ matrix.php-version }}"
                    tools: composer:v2

            -   run: |
                    VYRTUE_REV=$(jq -r '.nodes."ext-vyrtue".locked.rev' flake.lock)
                    git clone https://github.com/jbboehr/php-vyrtue.git
                    cd php-vyrtue
                    git checkout "${VYRTUE_REV}"
                    phpize
                    ./configure
                    make clean all test
                    sudo make install

            -   run: phpize

            -   run: ./configure CFLAGS="-fprofile-arcs -ftest-coverage ${CFLAGS}" LDFLAGS="--coverage ${LDFLAGS}"

            -   run: lcov --directory . --zerocounters

            -   run: lcov --directory . --capture --compat-libtool --initial --output-file coverage.info

            -   run: make

            -   run: make test TEST_PHP_ARGS='-d extension=php-vyrtue/modules/vyrtue.so'

            -   run: |
                    lcov --no-checksum --directory . --capture --compat-libtool --output-file coverage.info
                    lcov --remove coverage.info "/usr*" \
                        --remove coverage.info "*/.phpenv/*" \
                        --compat-libtool \
                        --output-file coverage.info

            -   name: Coveralls
                uses: coverallsapp/github-action@v2
                with:
                    file: coverage.info
                    format: lcov
                    parallel: true

    finish:
        needs: coverage
        if: ${{ always() }}
        runs-on: ubuntu-latest
        steps:
            -   name: Coveralls Finished
                uses: coverallsapp/github-action@v2
                with:
                    parallel-finished: true

    nix-matrix:
        runs-on: ubuntu-latest
        outputs:
            matrix: ${{ steps.set-matrix.outputs.matrix }}
        steps:
            -   uses: actions/checkout@v4
            -   uses: cachix/install-nix-action@v27
            -   id: set-matrix
                name: Generate Nix Matrix
                run: |
                    set -Eeu
                    matrix="$(nix eval --json '.#githubActions.matrix')"
                    echo "matrix=$matrix" >> "$GITHUB_OUTPUT"

    nix:
        name: "nix (${{ matrix.name }})"
        runs-on: ${{ matrix.os }}
        needs: nix-matrix
        strategy:
            matrix: ${{fromJSON(needs.nix-matrix.outputs.matrix)}}
        steps:
            -   uses: actions/checkout@v4

            -   name: Set Up Build Cache
                uses: actions/cache@v4
                id: nix-cache
                with:
                    path: /tmp/nix-store.nar
                    key: nix-store.nar-${{ runner.os }}-${{ hashFiles('flake.lock') }}-${{ matrix.attr }}
                    restore-keys: |
                        nix-store.nar-${{ runner.os }}-${{ hashFiles('flake.lock') }}-${{ matrix.attr }}
                        nix-store.nar-${{ runner.os }}-${{ hashFiles('flake.lock') }}-
                        nix-store.nar-${{ runner.os }}-

            -   uses: cachix/install-nix-action@v27
                with:
                    nix_path: nixpkgs=channel:nixos-24.05

            -   name: Import Nix Store Cache
                if: "steps.nix-cache.outputs.cache-hit == 'true'"
                run: |
                    nix-store --import < /tmp/nix-store.nar

            -   run: nix build -L ".#${{ matrix.attr }}"

            -   run: find -L result*; cp result-coverage/coverage.info coverage.info || true

#            -   name: Upload coverage reports to Codecov
#                if: ${{ hashFiles('coverage.info') != '' }}
#                uses: codecov/codecov-action@v4
#                with:
#                    file: coverage.info
#                    token: ${{ secrets.CODECOV_TOKEN }}
#                    slug: jbboehr/php-perfifidous
#
#            -   name: Coveralls
#                if: ${{ hashFiles('coverage.info') != '' }}
#                uses: coverallsapp/github-action@v2
#                continue-on-error: true
#                with:
#                    file: coverage.info
#                    format: lcov
#                    parallel: true

            -   name: Export Nix Store Cache
                shell: bash
                # partially based on https://github.com/NixOS/nix/issues/1245#issuecomment-282586759
                run: |
                    drv="$(nix-store -qd "$(readlink result)")"
                    drvRefs="$( echo "$drv" | xargs nix-store -q --references )"
                    ( echo "$drvRefs" | grep '[.]drv$' | xargs nix-store -q --outputs ;
                      echo "$drvRefs" | grep -v '[.]drv$' ) | \
                        xargs nix-store -r | \
                        xargs nix-store -qR |
                        xargs nix-store --export > /tmp/nix-store.nar
